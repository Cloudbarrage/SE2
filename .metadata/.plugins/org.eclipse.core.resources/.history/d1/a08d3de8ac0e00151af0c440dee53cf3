import java.util.HashMap;
import java.util.Map;
import java.util.Observable;
import java.util.Observer;

public class BeobachterZwei implements Observer {
	private int _n1;
	private int _n2;
	private int _id1;
	private int _id2;

	public BeobachterZwei() {
		_n1 = 0;
		_n2 = 0;
		_id1 = -1;
		_id2 = -1;
	}

	public void registriereBeobachter(BeobachtbarZwei beobachtbar) {
		beobachtbar.addObserver(this);
		if (_id1 == -1) {
			_id1 = beobachtbar.getID();
		} else if (_id2 == -1) {
			_id2 = beobachtbar.getID();
		}
	}

	@Override
	public void update(Observable o, Object arg) {
		count((int) arg);
	}

	private void count(int i) {
		if (i == _id1) {
			_n1++;
		} else if (i == _id2) {
			_n2++;
		}
	}

	public int getNumber(int i) {
		if (i == _id1) {
			return _n1;
		} else if (i == _id2) {
			return _n2;
		}
		return 0;
	}
}
