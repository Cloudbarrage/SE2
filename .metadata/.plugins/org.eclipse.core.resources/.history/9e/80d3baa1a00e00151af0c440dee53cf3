import java.util.HashMap;
import java.util.Map;
import java.util.Observable;
import java.util.Observer;

public class Beobachter implements Observer {
	private interface command {
		public void run(Object arg);
	}

	int _n;
	private Map<Observable, command> _funktionen;

	public Beobachter() {

		_funktionen = new HashMap<Observable, command>();

	}

	public void registriereBeobachter(Beobachtbar beobachtbar) {
		beobachtbar.addObserver(this);
		command com = new command() {
			public void run(Object arg) {
				count();
			}
		};

		_funktionen.put(beobachtbar, com);
	}

	@Override
	public void update(Observable o, Object arg) {
		_funktionen.get(o).run(arg);
	}

	private void count() {
		++_n;
	}

	public int getNumber() {
		return _n;
	}
}
