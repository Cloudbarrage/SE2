package de.uni_hamburg.informatik.swt.se2.kino.werkzeuge.bezahlung;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Observable;

import de.uni_hamburg.informatik.swt.se2.kino.fachwerte.Geld;

public class BezahlWerkzeug extends Observable
{
    private BezahlWerkzeugUI _ui;

    private Geld zuBezahlenderPreis;

    public BezahlWerkzeug(Geld preis)
    {
        zuBezahlenderPreis = preis;
        _ui = new BezahlWerkzeugUI(zuBezahlenderPreis);
        registriereUIAktionen();
        _ui.zeigeFenster();
    }

    private void registriereUIAktionen()
    {
        _ui.getOKButton()
            .addActionListener(new ActionListener()
            {
                @Override
                public void actionPerformed(ActionEvent e)
                {
                    bezahlt();
                    _ui.close();
                }
            });
        _ui.getAbbrechenButton()
            .addActionListener(new ActionListener()
            {
                @Override
                public void actionPerformed(ActionEvent e)
                {
                    _ui.close();
                }
            });
        _ui.getTextField()
            .getDocument()
            .addDocumentListener(new DocumentListener()
            {
                private void update()
                {
                    Geld rueckgabe = berechneRückgabewert();
                    _ui.setRueckzugebenderPreis(rueckgabe);
                    if (rueckgabe.signum() != -1)
                    {
                        _ui.getOKButton()
                            .setEnabled(true);
                    }
                    else
                    {
                        _ui.getOKButton()
                            .setEnabled(false);
                    }
                }

                @Override
                public void insertUpdate(DocumentEvent e)
                {

                }

                @Override
                public void removeUpdate(DocumentEvent e)
                {
                    ;
                }

                @Override
                public void changedUpdate(DocumentEvent e)
                {
                    ;
                }
            });
    }

    private Geld bezahlterPreis()
    {
        return new Geld(Integer.parseInt(_ui.getTextField()
            .getText()));
    }

    private Geld berechneRückgabewert()
    {
        return bezahlterPreis().substract(zuBezahlenderPreis);
    }

    private void bezahlt()
    {
        setChanged();
        notifyObservers();
    }

}
